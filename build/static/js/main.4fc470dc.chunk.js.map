{"version":3,"sources":["components/ui/RouteIcon.module.css","components/ui/RouteDisplayer.module.css","components/layout/Navigation.module.css","components/ui/DisplayStop.module.css","components/ui/MoreStops.module.css","components/ui/ArrivalsItem.module.css","components/layout/BackButton.module.css","components/ui/ChooseCompany.module.css","components/ui/ChooseRoute.module.css","pages/BusStop.module.css","components/layout/Title.module.css","components/ui/RouteInput.module.css","components/ui/SupportedRoutes.module.css","components/layout/Loading.module.css","components/ui/Subsection.module.css","components/ui/RouteMap.module.css","components/ui/StopMap.module.css","components/ui/ArrivalsTitle.module.css","components/ui/Attribution.module.css","components/layout/Navigation.js","components/layout/Layout.js","components/layout/Title.js","components/ui/RouteInput.js","data/Names.js","scripts/IsInNames.js","components/ui/RouteIcon.js","components/ui/SupportedRoutes.js","components/ui/Attribution.js","pages/Buses.js","components/layout/BackButton.js","components/ui/RouteDisplayer.js","assets/loading.gif","components/layout/Loading.js","components/ui/ChooseCompany.js","components/ui/ChooseRoute.js","components/ui/DisplayStop.js","components/ui/Subsection.js","components/ui/MoreStops.js","components/ui/RouteMap.js","scripts/XHRGetRequest.js","scripts/ObjIsEmpty.js","scripts/GetBusCompany.js","scripts/GetRouteInfo.js","scripts/GetMinibusRouteInfo.js","scripts/GetRouteStops.js","scripts/GetMinibusRouteStops.js","scripts/GetAllStopJSON.js","scripts/GetAllMinibusStopJSON.js","scripts/Capitalize.js","pages/BusStops.js","components/ui/StopMap.js","components/ui/ArrivalsTitle.js","components/ui/ArrivalsItem.js","scripts/GetStopRouteETA.js","scripts/GetMinibusStopRouteETA.js","scripts/GetUTCMilliseconds.js","scripts/GetTimeFromTimestamp.js","scripts/SortArrivalTimes.js","pages/BusStop.js","pages/PageNotFound.js","pages/Home.js","App.js","index.js"],"names":["module","exports","Navigation","className","classes","header","outerCircle","whiteCircle","pulsingCircle","headerTitle","headerRegion","Layout","props","children","Title","pageTitle","PageTitle","undefined","PageSubtitle","pageSubtitle","RouteInput","type","placeholder","ExampleRoute","routeInputTag","onChange","Update","autoFocus","submitRouteButton","onClick","Click","Names","IsInNames","route","company","namesArray","Object","keys","i","length","routeType","routeOperatorRoutes","j","RouteIcon","companyClass","Company","isSpecialCompany","Route","Citybus","KMB","NWFB","GMB","Default","Cityflyer","CityflyerOvernight","LWB","LWBOvernight","margins","Margins","boxShadow","BoxShadow","routeOuter","SupportedRoutes","supportedRoutesTitle","supportedRoutesHolder","map","Attribution","attribution","Text","Buses","document","title","window","clearInterval","refreshInterval","history","useHistory","push","value","target","trim","bind","this","BackButton","text","to","backButtonHolder","ArrowBack","backButtonIcon","backButtonText","RouteDisplayer","displayText","routeHolder","routeText","routeCompany","OverrideText","Loading","src","loading","alt","loadingIcon","loadingText","ChooseCompany","companiesArray","Companies","chooseCompanyTitle","chooseCompanySubtitle","el","idx","routeButton","ClickFunction","ChooseRoute","routesArray","Routes","route_id","description_en","DisplayStop","stopHolderButton","stopNumber","Number","stopName","StopName","stopHolder","Subsection","stopDisplayerHolder","stopDisplayerSubtitle","Subtitle","MoreStops","moreStopsButton","IsLoading","loadingGif","AddCircleOutline","moreStopsIcon","moreStopsText","overrideText","SetMapPosition","useMap","attributionControl","_container","offsetParent","RouteMap","coordinates","Coordinates","stopMapHolder","MapContainer","zoom","center","scrollWheelZoom","mapContainer","TileLayer","url","position","coords","Marker","Popup","Ids","XHRGetRequest","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","response","onerror","send","objIsEmpty","obj","Array","isArray","constructor","GetBusCompany","resolveData","finished","oneFinished","arr","allFinished","then","res","data","ObjIsEmpty","GetRouteInfo","direction","promise","routeURL","GetMinibusRouteInfo","routeId","GetRouteStops","GetMinibusRouteStops","route_stops","GetAllStopJSON","stopIds","stopJSON","forEach","stopId","getStopURL","individualStopJSON","GetAllMinibusStopJSON","lat","wgs84","latitude","long","longitude","individualStopRouteJSON","name_en","Capitalize","str","words","toLowerCase","split","capitalizedWords","word","toUpperCase","substring","join","BusStops","useState","isLoading","setIsLoading","setCompany","areMultipleCompanies","setAreMultipleCompanies","routeFound","setRouteFound","stopInfo","setStopInfo","setStopIds","setStopJSON","notShownStops","setNotShownStops","allShown","setAllShown","isLoadingStops","setIsLoadingStops","areMultipleRoutes","setAreMultipleRoutes","isMinibus","setIsMinibus","stopInfoAvailable","setStopInfoAvailable","setCoords","minibusRouteId","setMinibusRouteId","forceUpdate","setValue","useUpdatePage","fetchHashRoute","location","hash","updatePageTitle","triggerLoad","companyUpdated","useEffect","addEventListener","currentTime","Date","getTime","lastHashChange","updatedCompany","includes","setMinibusRoute","origin","orig_en","destination","dest_en","stopRes","stopIdArray","stop","info","directions","stop_id","loadAllStops","loadAllStopsMinibus","tempCoords","stopInfoTemp","targetedCapitalization","json","StopId","tempStopInfo","stopCompany","stopRoute","name","stopInformation","id","minibusRoute","goToStop","StopMap","Lat","Long","ArrivalsTitle","arrivalsTitleName","arrivalsTitleText","ArrivalsItem","arrivalsItemHolder","routeIcon","Destination","timeUntilArrival","TimeUntilArrival","GetStopRouteETA","GetMinibusStopRouteETA","routeData","eta","GetUTCMilliseconds","timeStr","GetTimeFromTimestamp","timestamp","currentUTCMilliseconds","differenceInMilliseconds","getUTCMinutes","getUTCSeconds","SortArrivalTimes","newArr","arrivalData","msUntilETA","newIndex","jArrivalData","BusStop","stopData","arrivalTimes","setArrivalTimes","lastFetchMs","setLastFetchMs","getArrivalTimes","tempArrivalTimes","getMinibusArrivalTimes","setInterval","noPadding","stopMapPadding","minibusNotice","arrivalTime","PageNotFound","App","path","exact","Home","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4fc470dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeOuter\":\"RouteIcon_routeOuter__T_UbS\",\"Citybus\":\"RouteIcon_Citybus__1WSCb\",\"KMB\":\"RouteIcon_KMB__1LHkN\",\"NWFB\":\"RouteIcon_NWFB__kt2Dp\",\"GMB\":\"RouteIcon_GMB__3QS4z\",\"Cityflyer\":\"RouteIcon_Cityflyer__2AwOe\",\"CityflyerOvernight\":\"RouteIcon_CityflyerOvernight__1z2aO\",\"LWB\":\"RouteIcon_LWB__1LRKL\",\"LWBOvernight\":\"RouteIcon_LWBOvernight__3UNrJ\",\"Default\":\"RouteIcon_Default__KppCM\",\"margins\":\"RouteIcon_margins__2k5cP\",\"boxShadow\":\"RouteIcon_boxShadow__iL9tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeHolder\":\"RouteDisplayer_routeHolder__2QWOV\",\"routeText\":\"RouteDisplayer_routeText__3MWxk\",\"Citybus\":\"RouteDisplayer_Citybus__zxwGw\",\"KMB\":\"RouteDisplayer_KMB__21Whg\",\"NWFB\":\"RouteDisplayer_NWFB__2M607\",\"GMB\":\"RouteDisplayer_GMB__uc9QW\",\"Cityflyer\":\"RouteDisplayer_Cityflyer__1QI_2\",\"CityflyerOvernight\":\"RouteDisplayer_CityflyerOvernight__Ga5xH\",\"LWB\":\"RouteDisplayer_LWB__2z2YR\",\"LWBOvernight\":\"RouteDisplayer_LWBOvernight__DYHBu\",\"Default\":\"RouteDisplayer_Default__3UtTX\",\"routeCompany\":\"RouteDisplayer_routeCompany__1DIiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navigation_header__1bq3P\",\"outerCircle\":\"Navigation_outerCircle__2CaYP\",\"whiteCircle\":\"Navigation_whiteCircle__2sTPM\",\"pulsingCircle\":\"Navigation_pulsingCircle__23HKV\",\"pulse\":\"Navigation_pulse__2TcfW\",\"headerTitle\":\"Navigation_headerTitle__hjU0u\",\"headerRegion\":\"Navigation_headerRegion__3jom-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopHolder\":\"DisplayStop_stopHolder__22zeM\",\"stopHolderButton\":\"DisplayStop_stopHolderButton__2sEJv\",\"stopNumber\":\"DisplayStop_stopNumber__2gdfo\",\"stopName\":\"DisplayStop_stopName__3c5hF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moreStopsButton\":\"MoreStops_moreStopsButton__s-pkf\",\"moreStopsIcon\":\"MoreStops_moreStopsIcon__1AziM\",\"loadingGif\":\"MoreStops_loadingGif__Y3DE8\",\"moreStopsText\":\"MoreStops_moreStopsText__1rOIt\",\"overrideText\":\"MoreStops_overrideText__1QNHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrivalsItemHolder\":\"ArrivalsItem_arrivalsItemHolder__kO5ef\",\"destination\":\"ArrivalsItem_destination__3xxiN\",\"timeUntilArrival\":\"ArrivalsItem_timeUntilArrival__1DSFv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButtonHolder\":\"BackButton_backButtonHolder__2bj1Z\",\"backButtonIcon\":\"BackButton_backButtonIcon__33TK2\",\"backButtonText\":\"BackButton_backButtonText__3F9yO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chooseCompanyTitle\":\"ChooseCompany_chooseCompanyTitle__2Gb0N\",\"chooseCompanySubtitle\":\"ChooseCompany_chooseCompanySubtitle__3XxHz\",\"routeButton\":\"ChooseCompany_routeButton__1jfiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chooseCompanyTitle\":\"ChooseRoute_chooseCompanyTitle__xji5q\",\"chooseCompanySubtitle\":\"ChooseRoute_chooseCompanySubtitle__2ILPP\",\"routeButton\":\"ChooseRoute_routeButton__2BqHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noPadding\":\"BusStop_noPadding__3v-u5\",\"stopMapPadding\":\"BusStop_stopMapPadding__2Wn01\",\"minibusNotice\":\"BusStop_minibusNotice__1LAZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitle\":\"Title_pageTitle__1-a0d\",\"pageSubtitle\":\"Title_pageSubtitle__ILwvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeInputTag\":\"RouteInput_routeInputTag__3Rpj9\",\"submitRouteButton\":\"RouteInput_submitRouteButton__vqR8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"supportedRoutesTitle\":\"SupportedRoutes_supportedRoutesTitle__1fNB5\",\"supportedRoutesHolder\":\"SupportedRoutes_supportedRoutesHolder__2DGs9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingIcon\":\"Loading_loadingIcon__YNGry\",\"loadingText\":\"Loading_loadingText__3mq4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopDisplayerHolder\":\"Subsection_stopDisplayerHolder__2glMc\",\"stopDisplayerSubtitle\":\"Subsection_stopDisplayerSubtitle__1rk1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopMapHolder\":\"RouteMap_stopMapHolder__2rvyv\",\"mapContainer\":\"RouteMap_mapContainer__1-OwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopMapHolder\":\"StopMap_stopMapHolder__2jqcW\",\"mapContainer\":\"StopMap_mapContainer__76gDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrivalsTitleName\":\"ArrivalsTitle_arrivalsTitleName__3FU45\",\"arrivalsTitleText\":\"ArrivalsTitle_arrivalsTitleText__1zWiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attribution\":\"Attribution_attribution__dsVwZ\"};","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<span className={classes.outerCircle}></span>\r\n\t\t\t<span className={classes.whiteCircle}></span>\r\n\t\t\t<span className={classes.pulsingCircle}></span>\r\n\t\t\t<span className={classes.headerTitle}>LiveTransit</span>\r\n\t\t\t<span className={classes.headerRegion}>HK</span>\r\n\t\t</header>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import Navigation from './Navigation';\r\n\r\nfunction Layout(props) {\r\n\treturn <div>\r\n\t\t<Navigation/>\r\n\t\t<main>{props.children}</main>\r\n\t</div>\r\n}\r\n\r\nexport default Layout;","import classes from './Title.module.css';\r\n\r\nfunction Title(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={classes.pageTitle}>{props.PageTitle}</span>\r\n\t\t\t{ props.PageSubtitle !== undefined ? <span className={classes.pageSubtitle}>{props.PageSubtitle}</span> : null }\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Title;","import classes from './RouteInput.module.css';\r\n\r\nfunction RouteInput(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input type=\"text\" placeholder={props.ExampleRoute} className={classes.routeInputTag} onChange={props.Update} autoFocus />\r\n\t\t\t<span className={classes.submitRouteButton} onClick={props.Click}>Go</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default RouteInput;","const Names = {\r\n\t'Cityflyer': ['Citybus', [\r\n\t\t'A10', 'A11', 'A12', 'A17', 'A20', 'A21', 'A22', 'A23', 'A26', 'A29', 'A29P'\r\n\t]],\r\n\t'Cityflyer (Overnight)': ['Citybus', [\r\n\t\t'NA10', 'NA11', 'NA12', 'NA20', 'NA21', 'NA29'\r\n\t]],\r\n\t'Long Win Bus': ['KMB', [\r\n\t\t'A31', 'A32', 'A33', 'A33X', 'A34', 'A36', 'A37', 'A38', 'A41', 'A41P', 'A43', 'A43P', 'A47X', 'E31', 'E32', 'E32A', 'E33', 'E33P', 'E36', 'E36A', 'E36P', 'E37', 'E41', 'E42', 'E42P', 'E43', 'S1', 'S64', 'S64C', 'S64P', 'S64X', 'S65', 'R8', 'R33', 'R42'\r\n\t]],\r\n\t'Long Win Bus (Overnight)': ['KMB', [\r\n\t\t'NA31', 'NA32', 'NA33', 'NA36', 'NA37', 'NA40', 'NA41', 'NA43', 'NA47'\r\n\t]]\r\n}\r\n\r\nexport default Names;","import Names from '../data/Names';\r\n\r\nconst IsInNames = (route, company) => {\r\n\tconst namesArray = Object.keys(Names);\r\n\tfor (let i = 0; i < namesArray.length; i++) {\r\n\t\tconst routeType = namesArray[i];\r\n\t\tconst routeOperator = Names[routeType][0];\r\n\t\tif (routeOperator === company) {\r\n\t\t\tconst routeOperatorRoutes = Names[routeType][1];\r\n\t\t\tfor (let j = 0; j < routeOperatorRoutes.length; j++) {\r\n\t\t\t\tconst routeNumber = routeOperatorRoutes[j];\r\n\t\t\t\tif (routeNumber === route) {\r\n\t\t\t\t\treturn routeType;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport default IsInNames;","import classes from './RouteIcon.module.css';\r\nimport IsInNames from '../../scripts/IsInNames';\r\n\r\nconst RouteIcon = props => {\r\n\tlet companyClass;\r\n\r\n\tlet company = props.Company;\r\n\r\n\tconst isSpecialCompany = IsInNames(props.Route, company);\r\n\t\r\n\tif (isSpecialCompany === false) {\r\n\t\tswitch (props.Company) {\r\n\t\t\tcase 'Citybus': {\r\n\t\t\t\tcompanyClass = classes.Citybus;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'KMB': {\r\n\t\t\t\tcompanyClass = classes.KMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'NWFB': {\r\n\t\t\t\tcompanyClass = classes.NWFB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (NT)': {\r\n\t\t\t\tcompanyClass = classes.GMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (KLN)': {\r\n\t\t\t\tcompanyClass = classes.GMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (HKI)': {\r\n\t\t\t\tcompanyClass = classes.GMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tcompanyClass = classes.Default;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tcompany = isSpecialCompany;\r\n\r\n\t\tswitch (isSpecialCompany) {\r\n\t\t\tcase 'Cityflyer': {\r\n\t\t\t\tcompanyClass = classes.Cityflyer;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Cityflyer (Overnight)': {\r\n\t\t\t\tcompanyClass = classes.CityflyerOvernight;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Long Win Bus': {\r\n\t\t\t\tcompanyClass = classes.LWB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Long Win Bus (Overnight)': {\r\n\t\t\t\tcompanyClass = classes.LWBOvernight;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tcompanyClass = classes.Default;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (props.Route === 'Cityflyer') {\r\n\t\tcompanyClass = classes.Cityflyer;\r\n\t} else if (props.Route === 'Long Win Bus') {\r\n\t\tcompanyClass = classes.LWB;\r\n\t}\r\n\r\n\tconst margins = props.Margins !== undefined ? classes.margins : null;\r\n\tconst boxShadow = props.BoxShadow !== undefined ? classes.boxShadow : null;\r\n\r\n\treturn (\r\n\t\t<span className={companyClass + ' ' + classes.routeOuter + ' ' + boxShadow + ' ' + margins}>{props.Route}</span>\r\n\t);\r\n}\r\n\r\nexport default RouteIcon;","import classes from './SupportedRoutes.module.css';\r\nimport RouteIcon from './RouteIcon';\r\n\r\nconst SupportedRoutes = () => {\r\n\tconst supportedRoutes = ['KMB', 'Long Win Bus', 'Citybus', 'Cityflyer', 'NWFB', 'Green Minibus (HKI)', 'Green Minibus (KLN)', 'Green Minibus (NT)'];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={classes.supportedRoutesTitle}>Supported Companies</span>\r\n\t\t\t<span className={classes.supportedRoutesHolder}>\r\n\t\t\t\t{supportedRoutes.map(company => <RouteIcon Company={company} Route={company} Margins=\"true\" BoxShadow=\"true\" key={`supported company ${company}`} />)}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SupportedRoutes;","import classes from './Attribution.module.css';\r\n\r\nfunction Attribution(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={classes.attribution}>{props.Text}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Attribution;","import { useHistory } from 'react-router-dom';\r\n\r\nimport Title from '../components/layout/Title';\r\nimport RouteInput from '../components/ui/RouteInput';\r\nimport SupportedRoutes from '../components/ui/SupportedRoutes';\r\nimport Attribution from '../components/ui/Attribution';\r\n\r\nfunction Buses() {\r\n\tdocument.title = `Buses | LiveTransit HK`;\r\n\t\r\n\twindow.clearInterval(window.refreshInterval);\r\n\r\n\tconst exampleRoute = '40';\r\n\r\n\tlet history = useHistory();\r\n\r\n\tfunction loadStops() {\r\n\t\tif (window.route === undefined || window.route === '') {\r\n\t\t\t// No user input\r\n\t\t\twindow.route = exampleRoute;\r\n\t\t}\r\n\t\thistory.push('/buses/stops#' + window.route);\r\n\t}\r\n\r\n\tfunction updateRoute(props) {\r\n\t\tlet value = props.target.value.trim();\r\n\t\tif (value !== '') {\r\n\t\t\twindow.route = value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Title PageTitle=\"Live Bus Timetables\" PageSubtitle=\"Enter a route number to see stops and live arrival times of both buses and minibuses.\" />\r\n\t\t\t<RouteInput ExampleRoute={window.route === undefined ? exampleRoute : window.route} Click={loadStops} Update={updateRoute.bind(this)} />\r\n\t\t\t<SupportedRoutes />\r\n\t\t\t<Attribution Text=\"Data courtesy of Citybus Limited, New World First Bus Services Limited, The Kowloon Motor Bus Company and the Government of Hong Kong.\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Buses;","import { Link } from 'react-router-dom';\r\n\r\nimport { ArrowBack } from '@material-ui/icons';\r\n\r\nimport classes from './BackButton.module.css';\r\n\r\nfunction BackButton(props) {\r\n\tlet text = props.Text;\r\n\tif (text === undefined) {\r\n\t\ttext = 'Back';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Link to={props.Route} className={classes.backButtonHolder}>\r\n\t\t\t\t<ArrowBack className={classes.backButtonIcon} />\r\n\t\t\t\t<span className={classes.backButtonText}>{text}</span>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BackButton;","import classes from './RouteDisplayer.module.css';\r\nimport IsInNames from '../../scripts/IsInNames';\r\n\r\nfunction RouteDisplayer(props) {\r\n\tlet companyClass;\r\n\r\n\tlet company = props.Company\r\n\r\n\tconst isSpecialCompany = IsInNames(props.Route, company);\r\n\t\r\n\tif (isSpecialCompany === false) {\r\n\t\tswitch (props.Company) {\r\n\t\t\tcase 'Citybus': {\r\n\t\t\t\tcompanyClass = classes.Citybus;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'KMB': {\r\n\t\t\t\tcompanyClass = classes.KMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'NWFB': {\r\n\t\t\t\tcompanyClass = classes.NWFB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (NT)': {\r\n\t\t\t\tcompanyClass = classes.GMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (KLN)': {\r\n\t\t\t\tcompanyClass = classes.GMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (HKI)': {\r\n\t\t\t\tcompanyClass = classes.GMB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tcompanyClass = classes.Default;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tcompany = isSpecialCompany;\r\n\r\n\t\tswitch (isSpecialCompany) {\r\n\t\t\tcase 'Cityflyer': {\r\n\t\t\t\tcompanyClass = classes.Cityflyer;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Cityflyer (Overnight)': {\r\n\t\t\t\tcompanyClass = classes.CityflyerOvernight;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Long Win Bus': {\r\n\t\t\t\tcompanyClass = classes.LWB;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Long Win Bus (Overnight)': {\r\n\t\t\t\tcompanyClass = classes.LWBOvernight;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tcompanyClass = classes.Default;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst displayText = company !== 'Default' ? company : 'Not Found' ;\r\n\r\n\treturn (\r\n\t\t<div className={classes.routeHolder}>\r\n\t\t\t<span className={`${classes.routeText} ${companyClass}`}>{props.Route}</span>\r\n\t\t\t<span className={classes.routeCompany}>\r\n\t\t\t\t{ props.OverrideText !== undefined ? props.OverrideText : displayText }\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default RouteDisplayer;","export default __webpack_public_path__ + \"static/media/loading.c99116b2.gif\";","import classes from './Loading.module.css';\r\nimport loading from '../../assets/loading.gif';\r\n\r\nfunction Loading() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img src={loading} alt=\"Loading...\" className={classes.loadingIcon} />\r\n\t\t\t<span className={classes.loadingText}>Loading...</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loading;","import RouteDisplayer from './RouteDisplayer';\r\n\r\nimport classes from './ChooseCompany.module.css';\r\n\r\nfunction ChooseCompany(props) {\r\n\tconst companiesArray = props.Companies;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={classes.chooseCompanyTitle}>Choose a company</span>\r\n\t\t\t<h4 className={classes.chooseCompanySubtitle}>Multiple companies operate this route.</h4>\r\n\t\t\t{companiesArray.map((el, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t<button className={classes.routeButton} onClick={() => props.ClickFunction(el)}>\r\n\t\t\t\t\t\t\t<RouteDisplayer Route={props.Route} Company={el} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ChooseCompany;","import RouteDisplayer from './RouteDisplayer';\r\n\r\nimport classes from './ChooseRoute.module.css';\r\n\r\nfunction ChooseRoute(props) {\r\n\tconst routesArray = props.Routes;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={classes.chooseCompanyTitle}>Choose a route</span>\r\n\t\t\t<h4 className={classes.chooseCompanySubtitle}>This route operates with different paths.</h4>\r\n\t\t\t{routesArray.map(el => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={el.route_id}>\r\n\t\t\t\t\t\t<button className={classes.routeButton} onClick={() => props.ClickFunction(el.route_id)}>\r\n\t\t\t\t\t\t\t<RouteDisplayer Route={props.Route} Company=\"Green Minibus (HKI)\" OverrideText={el.description_en} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ChooseRoute;","import classes from './DisplayStop.module.css';\r\n\r\nfunction DisplayStop(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tprops.Click !== undefined ?\r\n\t\t\t\t\t<button key={props.Number} className={classes.stopHolderButton} onClick={props.Click}>\r\n\t\t\t\t\t\t<span className={classes.stopNumber}>{props.Number}</span>\r\n\t\t\t\t\t\t<span className={classes.stopName}>{props.StopName}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t:\r\n\t\t\t\t\t<div key={props.Number} className={classes.stopHolder}>\r\n\t\t\t\t\t\t<span className={classes.stopNumber}>{props.Number}</span>\r\n\t\t\t\t\t\t<span className={classes.stopName}>{props.StopName}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DisplayStop;","import classes from './Subsection.module.css';\r\n\r\nfunction Subsection(props) {\r\n\treturn (\r\n\t\t<div className={classes.stopDisplayerHolder}>\r\n\t\t\t<span className={classes.stopDisplayerSubtitle}>{props.Subtitle}</span>\r\n\t\t\t<div>{props.children}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Subsection;","import { AddCircleOutline } from '@material-ui/icons';\r\n\r\nimport loading from '../../assets/loading.gif';\r\nimport classes from './MoreStops.module.css';\r\n\r\nfunction MoreStops(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ props.OverrideText === null ?\r\n\t\t\t\t<button className={classes.moreStopsButton} onClick={props.ClickFunction}>\r\n\t\t\t\t\t{ props.IsLoading === true ?\r\n\t\t\t\t\t\t<img src={loading} alt=\"Loading...\" className={classes.loadingGif} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<AddCircleOutline className={classes.moreStopsIcon} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span className={classes.moreStopsText}>{props.Number} More</span>\r\n\t\t\t\t</button>\r\n\t\t\t:\r\n\t\t\t\t<span className={classes.overrideText}>{props.OverrideText}</span>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MoreStops;","import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\n\r\nimport classes from './RouteMap.module.css';\r\n\r\nconst SetMapPosition = () => {\r\n\tconst map = useMap();\r\n\tmap.attributionControl._container.offsetParent.className = 'leaflet-top leaflet-right';\r\n\treturn null;\r\n}\r\n\r\nfunction RouteMap(props) {\r\n\tconst coordinates = props.Coordinates;\r\n\r\n\treturn (\r\n\t\t<div className={classes.stopMapHolder}>\r\n\t\t\t<MapContainer zoom={12} center={coordinates[0]} scrollWheelZoom={true} className={classes.mapContainer}>\r\n\t\t\t\t<SetMapPosition />\r\n\t\t\t\t{/* Make attributions visible */}\r\n\t\t\t\t<TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" position=\"topright\" />\r\n\t\t\t\t{coordinates.map((coords, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker position={coords} key={`marker${props.Ids[idx]}`}>\r\n\t\t\t\t\t\t\t<Popup key={`popup${props.Ids[idx]}`}>{`${idx + 1}: ${coords[2]}`}</Popup>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</MapContainer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default RouteMap;","const XHRGetRequest = url => {\r\n\tconst promise = new Promise((resolve, reject) => {\r\n\t\tconst xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', url, true);\r\n\r\n\t\txhr.responseType = 'json';\r\n\r\n\t\txhr.onload = () => {\r\n\t\t\tresolve(xhr.response);\r\n\t\t}\r\n\r\n\t\txhr.onerror = () => {\r\n\t\t\treject(xhr.response);\r\n\t\t}\r\n\r\n\t\txhr.send();\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default XHRGetRequest;","const objIsEmpty = obj => {\r\n\tif (Array.isArray(obj)) {\r\n\t\t// Object which is an array\r\n\t\treturn obj.length === 0;\r\n\t} else {\r\n\t\t// Object which isn't an array\r\n\t\treturn obj && obj.constructor === Object && Object.keys(obj).length === 0;\r\n\t}\r\n}\r\n\r\nexport default objIsEmpty;","import XHRGetRequest from './XHRGetRequest';\r\nimport ObjIsEmpty from './ObjIsEmpty';\r\n\r\nconst allFinished = arr => {\r\n\tfor (let idx = 0; idx < arr.length; idx++) {\r\n\t\tconst el = arr[idx];\r\n\t\tif (el !== true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nconst GetBusCompany = route => {\r\n\tconst promise = new Promise((resolve, reject) => {\r\n\t\tlet resolveData = [];\r\n\t\tlet finished = new Array(6);\r\n\r\n\t\tconst oneFinished = () => {\r\n\t\t\tif (allFinished(finished)) {\r\n\t\t\t\tif (resolveData.length === 0) {\r\n\t\t\t\t\tresolveData.push('Default');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(resolveData);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if data is from KMB\r\n\t\tXHRGetRequest(`https://data.etabus.gov.hk/v1/transport/kmb/route/${route}/outbound/1`).then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (!ObjIsEmpty(data)) {\r\n\t\t\t\tresolveData.push('KMB');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfinished[0] = true;\r\n\t\t\toneFinished();\r\n\t\t});\r\n\r\n\t\t// Check if data is from Citybus\r\n\t\tXHRGetRequest(`https://rt.data.gov.hk/v1/transport/citybus-nwfb/route/CTB/${route}`).then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (!ObjIsEmpty(data)) {\r\n\t\t\t\tresolveData.push('Citybus');\r\n\t\t\t}\r\n\r\n\t\t\tfinished[1] = true;\r\n\t\t\toneFinished();\r\n\t\t});\r\n\r\n\t\t// Check if data is from NWFB\r\n\t\tXHRGetRequest(`https://rt.data.gov.hk/v1/transport/citybus-nwfb/route/NWFB/${route}`).then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (!ObjIsEmpty(data)) {\r\n\t\t\t\tresolveData.push('NWFB');\r\n\t\t\t}\r\n\r\n\t\t\tfinished[2] = true;\r\n\t\t\toneFinished();\r\n\t\t});\r\n\r\n\t\t// Check if data is from a New Territories green minibus\r\n\t\tXHRGetRequest(`https://data.etagmb.gov.hk/route/NT/${route}`).then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (!ObjIsEmpty(data)) {\r\n\t\t\t\tresolveData.push('Green Minibus (NT)');\r\n\t\t\t}\r\n\r\n\t\t\tfinished[3] = true;\r\n\t\t\toneFinished();\r\n\t\t});\r\n\r\n\t\t// Check if data is from a Kowloon green minibus\r\n\t\tXHRGetRequest(`https://data.etagmb.gov.hk/route/KLN/${route}`).then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (!ObjIsEmpty(data)) {\r\n\t\t\t\tresolveData.push('Green Minibus (KLN)');\r\n\t\t\t}\r\n\r\n\t\t\tfinished[4] = true;\r\n\t\t\toneFinished();\r\n\t\t});\r\n\r\n\t\t// Check if data is from a Hong Kong Island green minibus\r\n\t\tXHRGetRequest(`https://data.etagmb.gov.hk/route/HKI/${route}`).then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (!ObjIsEmpty(data)) {\r\n\t\t\t\tresolveData.push('Green Minibus (HKI)');\r\n\t\t\t}\r\n\r\n\t\t\tfinished[5] = true;\r\n\t\t\toneFinished();\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetBusCompany;","import XHRGetRequest from \"./XHRGetRequest\";\r\n\r\nconst GetRouteInfo = (route, company, direction = 'outbound') => {\r\n\tconst promise = new Promise(resolve => {\r\n\t\tlet routeURL;\r\n\r\n\t\tswitch (company) {\r\n\t\t\tcase 'KMB': {\r\n\t\t\t\trouteURL = `https://data.etabus.gov.hk/v1/transport/kmb/route/${route}/${direction}/1`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Citybus': {\r\n\t\t\t\trouteURL = `https://rt.data.gov.hk/v1/transport/citybus-nwfb/route/CTB/${route}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'NWFB': {\r\n\t\t\t\trouteURL = `https://rt.data.gov.hk/v1/transport/citybus-nwfb/route/NWFB/${route}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (NT)': {\r\n\t\t\t\trouteURL = `https://data.etagmb.gov.hk/route/NT/${route}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (KLN)': {\r\n\t\t\t\trouteURL = `https://data.etagmb.gov.hk/route/KLN/${route}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Green Minibus (HKI)': {\r\n\t\t\t\trouteURL = `https://data.etagmb.gov.hk/route/HKI/${route}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Default': {\r\n\t\t\t\tresolve('Route not found');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\trouteURL = `https://data.etabus.gov.hk/v1/transport/kmb/route/${route}/outbound/1`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tXHRGetRequest(routeURL).then(res => {\r\n\t\t\tresolve(res);\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetRouteInfo;","import XHRGetRequest from \"./XHRGetRequest\";\r\n\r\nconst GetMinibusRouteInfo = routeId => {\r\n\tconst promise = new Promise((resolve, reject) => {\r\n\t\tXHRGetRequest(`https://data.etagmb.gov.hk/route/${routeId}`).then(res => {\r\n\t\t\tresolve(res.data[0])\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetMinibusRouteInfo","import XHRGetRequest from './XHRGetRequest';\r\nimport ObjIsEmpty from './ObjIsEmpty';\r\n\r\nconst GetRouteStops = (route, company, direction = 'outbound') => {\r\n\tconst promise = new Promise(resolve => {\r\n\t\tlet routeURL;\r\n\r\n\t\tswitch (company) {\r\n\t\t\tcase 'KMB': {\r\n\t\t\t\trouteURL = `https://data.etabus.gov.hk/v1/transport/kmb/route-stop/${route}/${direction}/1`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Citybus': {\r\n\t\t\t\trouteURL = `https://rt.data.gov.hk/v1/transport/citybus-nwfb/route-stop/CTB/${route}/${direction}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'NWFB': {\r\n\t\t\t\trouteURL = `https://rt.data.gov.hk/v1/transport/citybus-nwfb/route-stop/NWFB/${route}/${direction}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Default': {\r\n\t\t\t\tresolve('Route not found');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\trouteURL = `https://data.etabus.gov.hk/v1/transport/kmb/route/${route}/${direction}/1`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tXHRGetRequest(routeURL).then(res => {\r\n\t\t\tif (!ObjIsEmpty(res.data)) {\r\n\t\t\t\t// Stop data available\r\n\t\t\t\tresolve(res.data);\r\n\t\t\t} else {\r\n\t\t\t\t// No stop data available\r\n\t\t\t\tresolve(-1);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetRouteStops;","import XHRGetRequest from \"./XHRGetRequest\";\r\n\r\nconst GetMinibusRouteStops = routeId => {\r\n\tconst promise = new Promise((resolve, reject) => {\r\n\t\tXHRGetRequest(`https://data.etagmb.gov.hk/route-stop/${routeId}/1`).then(res => {\r\n\t\t\tresolve(res.data.route_stops);\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetMinibusRouteStops;","import XHRGetRequest from './XHRGetRequest';\r\n\r\nconst getStopURL = (company, stopId) => {\r\n\tswitch (company) {\r\n\t\tcase 'KMB': {\r\n\t\t\treturn `https://data.etabus.gov.hk/v1/transport/kmb/stop/${stopId}`;\r\n\t\t}\r\n\t\tcase 'Citybus': {\r\n\t\t\treturn `https://rt.data.gov.hk/v1/transport/citybus-nwfb/stop/${stopId}`;\r\n\t\t}\r\n\t\tcase 'NWFB': {\r\n\t\t\treturn `https://rt.data.gov.hk/v1/transport/citybus-nwfb/stop/${stopId}`;\r\n\t\t}\r\n\t\tcase 'Default': {\r\n\t\t\treturn 'Route not found';\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn `https://data.etabus.gov.hk/v1/transport/kmb/stop/${stopId}`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst allFinished = arr => {\r\n\tfor (let idx = 0; idx < arr.length; idx++) {\r\n\t\tconst el = arr[idx];\r\n\t\tif (el !== true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nconst GetAllStopJSON = (stopIds, company) => {\r\n\tconst promise = new Promise(resolve => {\r\n\t\tlet stopJSON = new Array(stopIds.length);\r\n\t\tlet finished = new Array(stopIds.length);\r\n\r\n\t\tconst oneFinished = () => {\r\n\t\t\tif (allFinished(finished)) {\r\n\t\t\t\tresolve(stopJSON);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstopIds.forEach((stopId, idx) => {\r\n\t\t\tXHRGetRequest(getStopURL(company, stopId)).then(individualStopJSON => {\r\n\t\t\t\tstopJSON[idx] = individualStopJSON;\r\n\t\t\t\tfinished[idx] = true;\r\n\t\t\t\toneFinished();\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetAllStopJSON;","import XHRGetRequest from './XHRGetRequest';\r\n\r\nconst allFinished = arr => {\r\n\tfor (let idx = 0; idx < arr.length; idx++) {\r\n\t\tconst el = arr[idx];\r\n\t\tif (el !== true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nconst GetAllMinibusStopJSON = stopIds => {\r\n\tconst promise = new Promise(resolve => {\r\n\t\tlet stopJSON = new Array(stopIds.length);\r\n\t\tlet finished = new Array(stopIds.length);\r\n\r\n\t\tconst oneFinished = () => {\r\n\t\t\tif (allFinished(finished)) {\r\n\t\t\t\tresolve(stopJSON);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstopIds.forEach((stopId, idx) => {\r\n\t\t\tXHRGetRequest(`https://data.etagmb.gov.hk/stop/${stopId}`).then(individualStopJSON => {\r\n\t\t\t\tstopJSON[idx] = individualStopJSON;\r\n\t\t\t\tstopJSON[idx].data.lat = individualStopJSON.data.coordinates.wgs84.latitude\r\n\t\t\t\tstopJSON[idx].data.long = individualStopJSON.data.coordinates.wgs84.longitude\r\n\r\n\t\t\t\tXHRGetRequest(`https://data.etagmb.gov.hk/stop-route/${stopId}`).then(individualStopRouteJSON => {\r\n\t\t\t\t\tstopJSON[idx].data.name_en = individualStopRouteJSON.data[0].name_en;\r\n\t\t\t\t\tfinished[idx] = true;\r\n\t\t\t\t\toneFinished();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetAllMinibusStopJSON;","const Capitalize = str => {\r\n\t// Capitalize everything prepended by spaces\r\n\tstr = str.toLowerCase();\r\n\tconst words = str.split(' ');\r\n\tlet capitalizedWords = [];\r\n\tfor (let i = 0; i < words.length; i++) {\r\n\t\tconst word = words[i];\r\n\t\tif (word.length !== 0) {\r\n\t\t\tcapitalizedWords.push(word[0].toUpperCase() + word.substring(1));\r\n\t\t}\r\n\t}\r\n\tconst capitalizedWordString = capitalizedWords.join(' ');\r\n\r\n\t// Capitalize everything prepended by opening brackets\r\n\tconst wordsFromBrackets = capitalizedWordString.split('(');\r\n\tconst capitalizedBracketWords = wordsFromBrackets.map(word => word[0].toUpperCase() + word.substring(1));\r\n\tconst capitalizedBracketWordString = capitalizedBracketWords.join('(');\r\n\r\n\treturn capitalizedBracketWordString;\r\n}\r\n\r\nexport default Capitalize;","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport BackButton from '../components/layout/BackButton';\r\nimport RouteDisplayer from '../components/ui/RouteDisplayer';\r\nimport Loading from '../components/layout/Loading';\r\nimport ChooseCompany from '../components/ui/ChooseCompany';\r\nimport ChooseRoute from '../components/ui/ChooseRoute';\r\nimport DisplayStop from '../components/ui/DisplayStop';\r\nimport Subsection from '../components/ui/Subsection';\r\nimport MoreStops from '../components/ui/MoreStops';\r\nimport RouteMap from '../components/ui/RouteMap';\r\nimport GetBusCompany from '../scripts/GetBusCompany';\r\nimport GetRouteInfo from '../scripts/GetRouteInfo';\r\nimport GetMinibusRouteInfo from '../scripts/GetMinibusRouteInfo';\r\nimport GetRouteStops from '../scripts/GetRouteStops';\r\nimport GetMinibusRouteStops from '../scripts/GetMinibusRouteStops';\r\nimport GetAllStopJSON from '../scripts/GetAllStopJSON';\r\nimport GetAllMinibusStopJSON from '../scripts/GetAllMinibusStopJSON';\r\nimport Capitalize from '../scripts/Capitalize';\r\nimport objIsEmpty from '../scripts/ObjIsEmpty';\r\nfunction useUpdatePage() {\r\n\tconst [, setValue] = useState(0);\r\n\treturn () => setValue(value => value + 1);\r\n}\r\n\r\nfunction BusStops() {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [company, setCompany] = useState('Default');\r\n\tconst [areMultipleCompanies, setAreMultipleCompanies] = useState([false]);\r\n\tconst [routeFound, setRouteFound] = useState(true);\r\n\tconst [stopInfo, setStopInfo] = useState([]);\r\n\tconst [stopIds, setStopIds] = useState([]);\r\n\tconst [stopJSON, setStopJSON] = useState([]);\r\n\tconst [notShownStops, setNotShownStops] = useState(0);\r\n\tconst [allShown, setAllShown] = useState(false);\r\n\tconst [isLoadingStops, setIsLoadingStops] = useState(false);\r\n\tconst [areMultipleRoutes, setAreMultipleRoutes] = useState([false]);\r\n\tconst [isMinibus, setIsMinibus] = useState(false);\r\n\tconst [stopInfoAvailable, setStopInfoAvailable] = useState(true);\r\n\tconst [coords, setCoords] = useState([]);\r\n\tconst [minibusRouteId, setMinibusRouteId] = useState(0);\r\n\r\n\tconst forceUpdate = useUpdatePage();\r\n\r\n\twindow.clearInterval(window.refreshInterval);\r\n\r\n\tlet history = useHistory();\r\n\r\n\t// Go to the buses index if a route is not defined (i.e. if the user went straight to /buses/stops)\r\n\tconst fetchHashRoute = () => {\r\n\t\tif (window.location.hash === '') {\r\n\t\t\thistory.push('/buses');\r\n\t\t} else {\r\n\t\t\twindow.route = window.location.hash.substring(1).toUpperCase();\r\n\t\t}\r\n\t}\r\n\r\n\tfetchHashRoute();\r\n\r\n\tconst updatePageTitle = () => {\r\n\t\tdocument.title = `${window.route} | Buses | LiveTransit HK`;\r\n\t}\r\n\r\n\tupdatePageTitle();\r\n\r\n\tconst triggerLoad = () => {\r\n\t\tsetIsLoading(true);\r\n\t\tGetBusCompany(window.route).then(res => {\r\n\t\t\tif (res.length === 1) {\r\n\t\t\t\tsetCompany(res[0]);\r\n\t\t\t\tcompanyUpdated(res[0]);\r\n\t\t\t\tif (res[0] === 'Default') {\r\n\t\t\t\t\tsetRouteFound(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetRouteFound(true);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetAreMultipleCompanies(res);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\ttriggerLoad();\r\n\t}, []);\r\n\r\n\twindow.addEventListener('hashchange', () => {\r\n\t\tconst currentTime = new Date().getTime();\r\n\t\t// When the URL changes.\r\n\t\tif (window.lastHashChange === undefined || currentTime - window.lastHashChange > 200) {\r\n\t\t\twindow.lastHashChange = currentTime;\r\n\t\t\tfetchHashRoute();\r\n\t\t\tupdatePageTitle();\r\n\t\t\tforceUpdate();\r\n\t\t\ttriggerLoad();\r\n\t\t}\r\n\t});\r\n\r\n\tconst chosenCompany = company => {\r\n\t\tsetCompany(company);\r\n\t\tcompanyUpdated(company);\r\n\t\tsetAreMultipleCompanies([false]);\r\n\t\tsetRouteFound(true);\r\n\t}\r\n\r\n\t// Triggers every time a company is set, and grabs stop data\r\n\tconst companyUpdated = updatedCompany => {\r\n\t\tsetStopIds([]);\r\n\t\tsetStopInfoAvailable(false);\r\n\t\tif (updatedCompany !== 'Default') {\r\n\t\t\tif (!updatedCompany.includes('Green Minibus')) {\r\n\t\t\t\t// Not a minibus\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t\tsetIsMinibus(false);\r\n\t\t\t\tsetAllShown(false);\r\n\t\t\t\tGetRouteInfo(window.route, updatedCompany).then(res => {\r\n\t\t\t\t\tlet origin = res.data.orig_en;\r\n\t\t\t\t\tlet destination = res.data.dest_en;\r\n\t\t\t\t\tif (updatedCompany === 'KMB') {\r\n\t\t\t\t\t\torigin = Capitalize(origin);\r\n\t\t\t\t\t\tdestination = Capitalize(destination);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetStopInfo([origin, destination]);\r\n\t\t\t\t\tGetRouteStops(window.route, updatedCompany).then(stopRes => {\r\n\t\t\t\t\t\tif (stopRes !== -1) {\r\n\t\t\t\t\t\t\t// Stop data available\r\n\t\t\t\t\t\t\tsetNotShownStops(stopRes.length - 2);\r\n\t\t\t\t\t\t\tlet stopIdArray = [];\r\n\t\t\t\t\t\t\tstopRes.forEach(stop => {\r\n\t\t\t\t\t\t\t\tstopIdArray.push(stop.stop);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tsetStopIds(stopIdArray);\r\n\t\t\t\t\t\t\tsetStopInfoAvailable(true);\r\n\t\t\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetStopInfoAvailable(false);\r\n\t\t\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// A minibus\r\n\t\t\t\tsetStopInfoAvailable(true);\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t\tsetIsMinibus(true);\r\n\t\t\t\tsetAllShown(false);\r\n\t\t\t\tGetRouteInfo(window.route, updatedCompany).then(res => {\r\n\t\t\t\t\tif (res.data.length === 1) {\r\n\t\t\t\t\t\tconst routeId = res.data[0].route_id;\r\n\t\t\t\t\t\tsetMinibusRouteId(routeId);\r\n\t\t\t\t\t\tsetMinibusRoute(routeId);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetAreMultipleRoutes(res.data);\r\n\t\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst setMinibusRoute = routeId => {\r\n\t\tsetAreMultipleRoutes([false]);\r\n\t\tsetIsLoading(true);\r\n\t\tGetMinibusRouteInfo(routeId).then(info => {\r\n\t\t\tconst origin = info.directions[0].orig_en;\r\n\t\t\tconst destination = info.directions[0].dest_en;\r\n\t\t\tsetStopInfo([origin, destination]);\r\n\t\t\tGetMinibusRouteStops(routeId).then(stopRes => {\r\n\t\t\t\tsetNotShownStops(stopRes.length - 2);\r\n\t\t\t\tlet stopIdArray = [];\r\n\t\t\t\tstopRes.forEach(stop => {\r\n\t\t\t\t\tstopIdArray.push(stop.stop_id);\r\n\t\t\t\t});\r\n\t\t\t\tsetStopIds(stopIdArray);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoading === false && allShown === false) {\r\n\t\t\tloadAllStops();\r\n\t\t}\r\n\t}, [allShown, isLoading]);\r\n\r\n\tconst loadAllStops = () => {\r\n\t\tif (stopInfoAvailable === true) {\r\n\t\t\tif (isMinibus) {\r\n\t\t\t\tloadAllStopsMinibus();\r\n\t\t\t} else {\r\n\t\t\t\tsetAllShown(false);\r\n\t\t\t\tsetIsLoadingStops(true);\r\n\t\t\t\tGetAllStopJSON(stopIds, company).then(res => {\r\n\t\t\t\t\tlet tempCoords = [];\r\n\t\t\t\t\tres.forEach(stopInfoTemp => tempCoords.push([stopInfoTemp.data.lat, stopInfoTemp.data.long, stopInfoTemp.data.name_en]));\r\n\t\t\t\t\tsetCoords(tempCoords);\r\n\t\t\t\t\tsetIsLoadingStops(false);\r\n\t\t\t\t\tsetStopJSON(res);\r\n\t\t\t\t\tsetAllShown(true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst loadAllStopsMinibus = () => {\r\n\t\tsetAllShown(false);\r\n\t\tsetIsLoadingStops(true);\r\n\t\tGetAllMinibusStopJSON(stopIds).then(res => {\r\n\t\t\tlet tempCoords = [];\r\n\t\t\tres.forEach(stopInfoTemp => tempCoords.push([stopInfoTemp.data.lat, stopInfoTemp.data.long, stopInfoTemp.data.name_en]));\r\n\t\t\tsetCoords(tempCoords);\r\n\t\t\tsetIsLoadingStops(false);\r\n\t\t\tsetStopJSON(res);\r\n\t\t\tsetAllShown(true);\r\n\t\t});\r\n\t}\r\n\r\n\tconst targetedCapitalization = (str, company) => {\r\n\t\tif (company === 'KMB') {\r\n\t\t\treturn Capitalize(str);\r\n\t\t} else {\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\r\n\twindow.targetedCapitalization = targetedCapitalization;\r\n\r\n\tconst goToStop = idx => {\r\n\t\tconst tempStopInfo = stopJSON[idx];\r\n\t\tconst stopId = stopIds[idx];\r\n\t\tconst stopCompany = company;\r\n\t\tconst stopRoute = window.route;\r\n\t\tlet name = tempStopInfo.data.name_en;\r\n\t\tif (stopCompany === 'KMB') {\r\n\t\t\tname = Capitalize(name);\r\n\t\t}\r\n\t\twindow.stopInformation = {\r\n\t\t\tid: stopId,\r\n\t\t\tcompany: stopCompany,\r\n\t\t\troute: stopRoute,\r\n\t\t\tname: name,\r\n\t\t\tlat: tempStopInfo.data.lat,\r\n\t\t\tlong: tempStopInfo.data.long,\r\n\t\t\tisMinibus: isMinibus,\r\n\t\t\tminibusRoute: minibusRouteId,\r\n\t\t\tdestination: stopInfo[1]\r\n\t\t};\r\n\t\thistory.push('/buses/stop');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BackButton Route=\"/buses\" />\r\n\t\t\t{isLoading === false && areMultipleCompanies[0] === false && areMultipleRoutes[0] === false ? <RouteDisplayer Company={company} Route={window.route} /> : null}\r\n\t\t\t{isLoading ? <Loading /> : null}\r\n\t\t\t{areMultipleCompanies[0] !== false && isLoading === false ? <ChooseCompany Companies={areMultipleCompanies} Route={window.route} ClickFunction={chosenCompany} /> : null}\r\n\t\t\t{areMultipleRoutes[0] !== false && isLoading === false ? <ChooseRoute Routes={areMultipleRoutes} Route={window.route} ClickFunction={setMinibusRoute} /> : null}\r\n\t\t\t{isLoading === false && areMultipleCompanies[0] === false && areMultipleRoutes[0] === false && routeFound === true ?\r\n\t\t\t\t<Subsection Subtitle=\"Stops\">\r\n\t\t\t\t\t{!objIsEmpty(coords) && !isLoading ? <RouteMap Coordinates={coords} Ids={stopIds} /> : null}\r\n\t\t\t\t\t{allShown ?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{stopJSON.map((json, idx) => {\r\n\t\t\t\t\t\t\t\treturn <DisplayStop StopName={targetedCapitalization(json.data.name_en, company)} Number={idx + 1} StopId={stopIds[idx]} key={stopIds[idx]} Click={() => goToStop(idx)} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<DisplayStop StopName={stopInfo[0]} Number=\"Origin\" />\r\n\t\t\t\t\t\t\t<MoreStops OverrideText={ stopInfoAvailable ? null : 'Stop information not available' } Number={ notShownStops } ClickFunction={ stopInfoAvailable ? loadAllStops : undefined } IsLoading={isLoadingStops ? true : false} />\r\n\t\t\t\t\t\t\t<DisplayStop StopName={stopInfo[1]} Number=\"Destination\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Subsection>\r\n\t\t\t\t: null}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BusStops;","import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\n\r\nimport classes from './StopMap.module.css';\r\n\r\nconst SetMapPosition = () => {\r\n\tconst map = useMap();\r\n\tmap.attributionControl._container.offsetParent.className = 'leaflet-top leaflet-right';\r\n\treturn null;\r\n}\r\n\r\nfunction StopMap(props) {\r\n\tconst coordinates = [props.Lat, props.Long];\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.stopMapHolder}>\r\n\t\t\t<MapContainer zoom={22} center={coordinates} scrollWheelZoom={true} className={classes.mapContainer}>\r\n\t\t\t\t<SetMapPosition />\r\n\t\t\t\t{/* Make attributions visible */}\r\n\t\t\t\t<TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n\t\t\t\t<Marker position={coordinates}>\r\n\t\t\t\t\t<Popup>{props.StopName}</Popup>\r\n\t\t\t\t</Marker>\r\n\t\t\t</MapContainer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default StopMap;","import classes from './ArrivalsTitle.module.css';\r\nimport RouteIcon from './RouteIcon';\r\n\r\nfunction ArrivalsTitle(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={classes.arrivalsTitleName}>{props.StopName}</span>\r\n\t\t\t<span className={classes.arrivalsTitleText}>\r\n\t\t\t\tLive\r\n\t\t\t\t<RouteIcon Route={props.Route} Company={props.Company} BoxShadow=\"true\" Margins=\"true\" />\r\n\t\t\t\tArrivals\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ArrivalsTitle","import classes from './ArrivalsItem.module.css';\r\nimport RouteIcon from './RouteIcon';\r\n\r\nconst ArrivalsItem = props => {\r\n\treturn (\r\n\t\t<div className={classes.arrivalsItemHolder}>\r\n\t\t\t<RouteIcon Route={props.Route} Company={props.Company} className={classes.routeIcon} />\r\n\t\t\t<span className={classes.destination}>{props.Destination}</span>\r\n\t\t\t<span className={classes.timeUntilArrival}>{props.TimeUntilArrival}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ArrivalsItem;","import XHRGetRequest from './XHRGetRequest';\r\n\r\nconst getStopURL = (company, stopId, route) => {\r\n\tswitch (company) {\r\n\t\tcase 'KMB': {\r\n\t\t\treturn `https://data.etabus.gov.hk/v1/transport/kmb/eta/${stopId}/${route}/1`;\r\n\t\t}\r\n\t\tcase 'Citybus': {\r\n\t\t\treturn `https://rt.data.gov.hk/v1/transport/citybus-nwfb/eta/CTB/${stopId}/${route}`;\r\n\t\t}\r\n\t\tcase 'NWFB': {\r\n\t\t\treturn `https://rt.data.gov.hk/v1/transport/citybus-nwfb/eta/NWFB/${stopId}/${route}`;\r\n\t\t}\r\n\t\tcase 'Default': {\r\n\t\t\treturn 'Route not found';\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn 'Route not found';\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst GetStopRouteETA = (company, stopId, route) => {\r\n\tconst promise = new Promise(resolve => {\r\n\t\tXHRGetRequest(getStopURL(company, stopId, route)).then(res => {\r\n\t\t\tresolve(res.data);\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetStopRouteETA;","import XHRGetRequest from './XHRGetRequest';\r\n\r\nconst GetMinibusStopRouteETA = (stopId, routeId) => {\r\n\tconst promise = new Promise(resolve => {\r\n\t\tXHRGetRequest(`https://crossrun.herokuapp.com/https://data.etagmb.gov.hk/eta/stop/${stopId}`).then(res => {\r\n\t\t\tres = res.data;\r\n\t\t\tres.forEach(routeData => {\r\n\t\t\t\tif (routeData.route_id === routeId) {\r\n\t\t\t\t\tresolve(routeData.eta);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nexport default GetMinibusStopRouteETA;","const GetUTCMilliseconds = timeStr => {\r\n\treturn new Date(timeStr).getTime();\r\n}\r\n\r\nexport default GetUTCMilliseconds;","import GetUTCMilliseconds from \"./GetUTCMilliseconds\";\r\n\r\nconst GetTimeFromTimestamp = timestamp => {\r\n\tconst currentUTCMilliseconds = new Date().getTime();\r\n\tconst timestampUTCMilliseconds = GetUTCMilliseconds(timestamp);\r\n\tconst differenceInMilliseconds = timestampUTCMilliseconds - currentUTCMilliseconds;\r\n\tif (differenceInMilliseconds > 60000) {\r\n\t\treturn [`${new Date(differenceInMilliseconds).getUTCMinutes()} mins`, differenceInMilliseconds];\r\n\t} else if (differenceInMilliseconds > 0) {\r\n\t\treturn [`${new Date(differenceInMilliseconds).getUTCSeconds()} secs`, differenceInMilliseconds];\r\n\t} else {\r\n\t\treturn ['Now', differenceInMilliseconds];\r\n\t}\r\n}\r\n\r\nexport default GetTimeFromTimestamp;","import GetTimeFromTimestamp from \"./GetTimeFromTimestamp\";\r\n\r\nconst SortArrivalTimes = arr => {\r\n\tlet newArr = new Array(arr.length);\r\n\r\n\tfor (let idx = 0; idx < arr.length; idx++) {\r\n\t\tconst arrivalData = arr[idx];\r\n\t\tconst msUntilETA = GetTimeFromTimestamp(arrivalData.eta)[1];\r\n\r\n\t\tvar newIndex = 0;\r\n\r\n\t\tfor (let j = 0; j < arr.length; j++) {\r\n\t\t\tconst jArrivalData = arr[j];\r\n\t\t\tconst jMsUntilETA = GetTimeFromTimestamp(jArrivalData.eta)[1];\r\n\r\n\t\t\tif (msUntilETA > jMsUntilETA) {\r\n\t\t\t\tnewIndex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (newArr[newIndex] !== undefined) {\r\n\t\t\tnewIndex++;\r\n\t\t}\r\n\r\n\t\tnewArr[newIndex] = arrivalData;\r\n\t}\r\n\t\r\n\treturn newArr;\r\n}\r\n\r\nexport default SortArrivalTimes;","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport classes from './BusStop.module.css';\r\nimport BackButton from '../components/layout/BackButton';\r\nimport StopMap from '../components/ui/StopMap';\r\nimport ArrivalsTitle from '../components/ui/ArrivalsTitle';\r\nimport ArrivalsItem from '../components/ui/ArrivalsItem';\r\nimport Loading from '../components/layout/Loading';\r\nimport GetStopRouteETA from '../scripts/GetStopRouteETA';\r\nimport GetMinibusStopRouteETA from '../scripts/GetMinibusStopRouteETA';\r\nimport SortArrivalTimes from '../scripts/SortArrivalTimes';\r\nimport ObjIsEmpty from '../scripts/ObjIsEmpty';\r\nimport GetTimeFromTimestamp from '../scripts/GetTimeFromTimestamp';\r\nimport Capitalize from '../scripts/Capitalize';\r\n\r\nfunction BusStop() {\r\n\tconst updateFrequency = 20000; // In milliseconds\r\n\r\n\tconst [stopData] = useState(window.stopInformation);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [arrivalTimes, setArrivalTimes] = useState([]);\r\n\tconst [lastFetchMs, setLastFetchMs] = useState(0);\r\n\r\n\tlet history = useHistory();\r\n\r\n\tconst getArrivalTimes = () => {\r\n\t\tif (stopData.isMinibus !== true) {\r\n\t\t\tif (lastFetchMs === 0 || new Date().getTime() - lastFetchMs >= updateFrequency) {\r\n\t\t\t\tGetStopRouteETA(stopData.company, stopData.id, stopData.route).then(res => {\r\n\t\t\t\t\tlet tempArrivalTimes = [];\r\n\t\t\t\t\tres.forEach(stopInfo => {\r\n\t\t\t\t\t\ttempArrivalTimes.push(stopInfo);\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttempArrivalTimes = SortArrivalTimes(tempArrivalTimes);\r\n\t\t\t\t\tsetArrivalTimes(tempArrivalTimes);\r\n\t\t\t\t\tif (ObjIsEmpty(tempArrivalTimes)) {\r\n\t\t\t\t\t\tclearInterval(window.refreshInterval);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t});\r\n\t\t\t\tsetLastFetchMs(new Date().getTime());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tgetMinibusArrivalTimes();\r\n\t\t}\r\n\t}\r\n\r\n\tconst getMinibusArrivalTimes = () => {\r\n\t\tif (lastFetchMs === 0 || new Date().getTime() - lastFetchMs >= 20000) {\r\n\t\t\tGetMinibusStopRouteETA(stopData.id, stopData.minibusRoute).then(res => {\r\n\t\t\t\tlet tempArrivalTimes = [];\r\n\t\t\t\tres.forEach((stopInfo, idx) => {\r\n\t\t\t\t\ttempArrivalTimes.push(stopInfo);\r\n\t\t\t\t\ttempArrivalTimes[idx].dest_en = stopData.destination;\r\n\t\t\t\t\ttempArrivalTimes[idx].eta = stopInfo.timestamp;\r\n\t\t\t\t});\r\n\t\t\t\ttempArrivalTimes = SortArrivalTimes(tempArrivalTimes);\r\n\t\t\t\tsetArrivalTimes(tempArrivalTimes);\r\n\t\t\t\tif (ObjIsEmpty(tempArrivalTimes)) {\r\n\t\t\t\t\tclearInterval(window.refreshInterval);\r\n\t\t\t\t}\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t});\r\n\t\t\tsetLastFetchMs(new Date().getTime());\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stopData !== undefined) {\r\n\t\t\tgetArrivalTimes();\r\n\t\t\twindow.refreshInterval = setInterval(getArrivalTimes, 500);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tif (stopData === undefined) {\r\n\t\thistory.push('/buses');\r\n\t\treturn (\r\n\t\t\t<h1>No stop specified</h1>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className={classes.noPadding}>\r\n\t\t\t\t<StopMap Lat={stopData.lat} Long={stopData.long} StopName={stopData.name} />\r\n\t\t\t\t<div className={classes.stopMapPadding}>\r\n\t\t\t\t\t<BackButton Text={stopData.route} Route={`/buses/stops#${stopData.route}`} />\r\n\t\t\t\t\t<ArrivalsTitle StopName={stopData.name} Route={stopData.route} Company={stopData.company} />\r\n\r\n\t\t\t\t\t{ !isLoading && stopData.isMinibus === true ? <span className={classes.minibusNotice}>Please note that these times have not been tested and may be incorrect.</span> : null }\r\n\r\n\t\t\t\t\t{/* Shows arrival times if the array isn't empty */}\r\n\t\t\t\t\t{ !ObjIsEmpty(arrivalTimes) ?\r\n\t\t\t\t\t\tarrivalTimes.map((arrivalTime, idx) => {\r\n\t\t\t\t\t\t\treturn <ArrivalsItem Route={stopData.route} Company={stopData.company} Destination={Capitalize(arrivalTime.dest_en)} TimeUntilArrival={GetTimeFromTimestamp(arrivalTime.eta)[0]} key={`arrival${idx}`} />\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{isLoading ? <Loading /> : <h3>No departures soon</h3>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BusStop;","import Title from \"../components/layout/Title\";\r\n\r\nfunction PageNotFound() {\r\n\treturn (\r\n\t\t<Title PageTitle=\"Page Not Found\" PageSubtitle=\"Sorry, we couldn't find the page you were looking for.\" />\r\n\t)\r\n}\r\n\r\nexport default PageNotFound;","import { Link } from 'react-router-dom';\r\n\r\nimport Title from '../components/layout/Title';\r\n\r\nfunction Buses() {\r\n\tdocument.title = `LiveTransit HK`;\r\n\t\r\n\twindow.clearInterval(window.refreshInterval);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Title PageTitle=\"Live Transit Tracking\" PageSubtitle=\"Track bus and minibus routes live.\" />\r\n\t\t\t<Link to=\"/buses\">Live Bus Tracking</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Buses;","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Layout from './components/layout/Layout';\nimport Buses from './pages/Buses';\nimport BusStops from './pages/BusStops';\nimport BusStop from './pages/BusStop';\nimport PageNotFound from './pages/PageNotFound';\nimport Home from './pages/Home';\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home />\n                </Route>\n                <Route path=\"/buses\" exact>\n                    <Buses />\n                </Route>\n                <Route path=\"/buses/stops\" exact>\n                    <BusStops />\n                </Route>\n                <Route path=\"/buses/stop\" exact>\n                    <BusStop />\n                </Route>\n                <Route path=\"/404\" exact>\n                    <PageNotFound />\n                </Route>\n                <Redirect to=\"/404\" />\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}